require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'
plugin 'cocoapods-art', :sources => ['cocoa-pro-fphi']
source 'https://cdn.cocoapods.org/'
use_frameworks!
install! 'cocoapods', :deterministic_uuids => false

def shared_pods
  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => rn_maps_path
  pod 'react-native-config', :path => '../node_modules/react-native-config'
  pod 'react-native-contacts', :path => '../node_modules/react-native-contacts'

  config = use_native_modules!

    # Flags change depending on the env values.
    flags = get_default_flags()
    
    
    $static_framework = [
      'amplitude-react-native',
      'FPBTokenizer',
      'FPhiMBWidgetiOS',
      'FPHICORElicensingLite',
      'FPHISelphiFrameworks',
      'FirebaseABTesting',
      'FirebaseAnalytics',
      'FirebaseCore',
      'FirebaseCoreInternal',
      'FirebaseCrashlytics',
      'FirebaseInstallations',
      'FirebaseMessaging',
      'FirebasePerformance',
      'FirebaseRemoteConfig',
      'FirebaseSessions',
      'FirebaseCoreExtension',
      'Flipper',
      'Flipper-Boost-iOSX',
      'Flipper-Fmt',
      'Flipper-Folly',
      'Flipper-Glog',
      'FlipperKit',
      'Flipper-PeerTalk',
      'Flipper-RSocket',
      'glog',
      'Google-Maps-iOS-Utils',
      'jail-monkey',
      'lottie-react-native',
      'PromisesSwift',
      'RCT-Folly',
      'RNFastImage',
      'RCTTypeSafety',
      'React-cxxreact',
      'React-Core',
      'React-CoreModules',
      'React-Codegen',
      'React-hermes',
      'React-jsi',
      'React-jsiexecutor',
      'React-logger',
      'React-RCTAnimation',
      'React-RCTBlob',
      'React-RCTImage',
      'React-RCTLinking',
      'React-RCTNetwork',
      'React-RCTSettings',
      'React-RCTText',
      'React-RCTVibration',
      'ReactCommon',
      'react-native-blob-util',
      'react-native-cameraroll',
      'react-native-config',
      'react-native-contacts',
      'react-native-dynatrace',
      'react-native-flipper',
      'react-native-geolocation-service',
      'react-native-get-random-values',
      'react-native-google-maps',
      'react-native-maps',
      'react-native-mmkv',
      'react-native-netinfo',
      'react-native-pdf',
      'react-native-safe-area-context',
      'react-native-splash-screen',
      'react-native-view-shot',
      'react-native-webview',
      'RNDeviceInfo',
      'RNCAsyncStorage',
      'RNCClipboard',
      'RNGestureHandler',
      'RNExitApp',
      'RNFBAnalytics',
      'RNFBApp',
      'RNFBCrashlytics',
      'RNFBMessaging',
      'RNFBPerf',
      'RNFBRemoteConfig',
      'RNFS',
      'RNNotifee',
      'RNShare',
      'RNScreens',
      'RNSslPinning',
      'RCTFingerprintModule',
      'RNSVG',
      'Yoga',
      'YogaKit'
    ] 

      pre_install do |installer|
          Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
          installer.pod_targets.each do |pod|
              if $static_framework.include?(pod.name)
                def pod.build_type;
                  Pod::BuildType.static_library
                end
              end
            end
        end

    use_react_native!(
      :path => config[:reactNativePath],
      # to enable hermes on iOS, change `false` to `true` and then install pods
      # :hermes_enabled => flags[:hermes_enabled],
      :hermes_enabled => true,
      :fabric_enabled => flags[:fabric_enabled],
      # An absolute path to your application root.
      :app_path => "#{Pod::Config.instance.installation_root}/.."
    )

    pod 'RNFS', :path => '../node_modules/react-native-fs'
    pod 'RNSslPinning', :path => '../node_modules/react-native-ssl-pinning'
    pod 'Firebase', :modular_headers => true
    pod 'FirebaseCoreInternal', :modular_headers => true
    pod 'FirebaseCore', :modular_headers => true
    pod 'FirebaseSessions', :modular_headers => true
    pod 'FirebaseInstallations', :modular_headers => true
    pod 'FirebaseCoreExtension', :modular_headers => true
    pod 'GoogleUtilities', :modular_headers => true
    pod 'react-native-dynatrace', :path => '../node_modules/@dynatrace/react-native-plugin'
    pod 'FPL', :path => '../libs/sdk-monitor-plus/ios/Fingerprint'
  
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    use_flipper!()
end

target 'prod_CompartamosFinancieraTarget' do
  shared_pods

  target 'CompartamosFinancieraTests' do
    inherit! :complete
    # Pods for testing
  end
end
target 'dev_CompartamosFinancieraTarget' do
  shared_pods
end
target 'qas_CompartamosFinancieraTarget' do
  shared_pods
end
target 'qa_CompartamosFinancieraTarget' do
  shared_pods
end

post_install do |installer|
  react_native_post_install(installer)
  __apply_Xcode_12_5_M1_post_install_workaround(installer)
  installer.pods_project.build_configurations.each do |config|
    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
  end
  installer.pods_project.targets.each do |target|
    if target.name == 'Flipper'
      file_path = 'Pods/Flipper/xplat/Flipper/FlipperTransportTypes.h'
      contents = File.read(file_path)
      unless contents.include?('#include <functional>')
        File.open(file_path, 'w') do |file|
          file.puts('#include <functional>')
          file.puts(contents)
        end
      end
    end
    target.build_configurations.each do |config|
      xcconfig_path = config.base_configuration_reference.real_path
      xcconfig = File.read(xcconfig_path)
      xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
      File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
      config.build_settings['SWIFT_VERSION'] = '5.0'
      if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] < '12.4'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
      end
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
    end
  end
end
